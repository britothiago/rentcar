{
  "openapi": "3.0.0",
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
      {
        "bearerAuth": []
      }
    ],
  "info": {
    "title": "Rent Car documentation",
    "description": "This is an API Rent Car",
    "version": "1.0.0",
    "contact": {
      "email": "britotr@gmail.com"
    }
  },
  "paths": {
    "/health": {
      "get": {
        "tags": ["HealthCheck"],
        "summary": "Get status of API health",
        "description": "Get status of API health",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth": {
      "post": {
        "tags": ["Session"],
        "summary": "Get token of authentication",
        "description": "Create a new token of authentication by user and password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                     "type": "string"
                  }
                },
                "example": {
                  "email": "some email",
                  "password": "Some password"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get a valid token"
          },
          "400": {
            "description": "Email or password incorrect"
          }
        }
      }
    },
    "/accounts": {
      "post": {
        "tags": ["Accounts"],
        "summary": "Create a new user with avatar",
        "description": "Create a new user with a optional avatar",
        "requestBody": {
          "content": {
            "multipart/form-data":{
              "schema":{
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "driver_license": {
                    "type": "string"
                  },
                  "isAdmin": {
                    "type": "boolean",
                    "default": false
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created"
          },
          "500": {
            "description": "User already exists"
          },
          "400": {
            "description": "File exceeds size limit"
          }
        }
      },
      "get": {
       "tags": ["Accounts"],
        "summary": "List all users",
        "description": "List all users",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "idAdmin": {
                        "type": "boolean"
                      },
                      "driver_license": {
                        "type": "string"
                      },
                      "avatar": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }      
      }
    },
    "/categories": {
      "post": {
        "tags": ["Category"],
        "summary": "Create  category",
        "description": "Create a new category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                     "type": "string"
                  }
                },
                "example": {
                  "name": "category name sample",
                  "description": "Category description sample"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Category already exists"
          }
        }
      },
      "get": {
        "tags": ["Category"],
        "summary": "List categories",
        "description": "List all categories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/import":{
      "post": {
        "tags": ["Category"],
        "summary": "Upload a new category",
        "description": "Upload a new category",
        "requestBody": {
          "content": {
            "multipart/form-data":{
              "schema":{
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Categories already exists"
          }
        }
      }
    },
    "/specifications": {
      "post": {
        "tags": ["Specification"],
        "summary": "Create specifications",
        "description": "Specifications",
        "requestBody": {
          "content": {
            "application/json": {
              "schema":{
               "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Specification already exists"
          }
        }
      },
      "get": {
        "tags": ["Specification"],
        "summary": "List specifications",
        "description": "List all specifications",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
          }
        }
      }
    }    
  } 
}